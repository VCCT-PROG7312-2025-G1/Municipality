<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="openFileDialog.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>38, 41</value>
  </metadata>
  <metadata name="backgroundWorker1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>171, 41</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAIBoAAAEAIACQDQAAFgAAACgAAAAgAAAANAAAAAEAIAAAAAAAAA0AABMLAAATCwAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC94OIAAP+vAK3i4Tym4uDNpeHh6Kfh4L+y5OExhdzcAM7l
        5AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALPi4gC04+IfpuLhzaLi4P+i4eH/ouHh/6fi
        4NKr4d9DsuTiD7nj3gIAAP8A2OjfAunv5wD49u4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAANPhwQDT4cEA2OC6AK3l4wCr4uIlq+Lia6fi4baj4uH8o+Hh/6Ph
        4f+j4eH/o+Lg/6Ph4Oyk4uHLqOLhgajj32mo496aqOHgcaji4HGx5OA5AF1BANXx7wAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAreDfAKzh3xKu4+BC//L1Aqjh4Zai4uH/ouHh/6Ph
        4f+j4eH/o+Hh/6Ph4f+j4eH/o+Hh/6Lh4f+i4eH/o+Lf/qPi3/+j4eH/o+Lg/6bj4N2t4uFPADoAAMTq
        5wAAAAAA/+feAP/n3gD/594A/+feAAAAAAAAAAAAAAAAAAAAAACw3+AAr9/gGanh4Lqm4uCipOHh3qPh
        4f+j4eH/o+Hh/6Ph4f+j4eH/o+Hh/6Ph4f+j4eH/o+Hh/6Ph4f+j4eH/o+Hh/6Ph4f+j4eH/ouHh/6Xi
        4eOn4uCJqeLfYKrh4leo4eFypuHgkqfh4JCu4eFFuN/iCbbf4gAAAAAAAAAAALbf3wDD398FqOLgn6Ph
        4f+j4eH/o+Hh/6Ph4f+j4eH/o+Hh/6Ph4f+j4eH/o+Hh/6Ph4f+j4eH/o+Hh/6Ph4f+j4eH/o+Hh/6Ph
        4f+j4eH/o+Hh/6Ph4P+k497+pOHh/aLi4f+i4eH/o+Hh/avf4dG82+AxuN3hAAAAAAAAAAAAw+roAP/+
        /wGp4uGXo+Hh/6Ph4f+j4eH/o+Hh/6Ph4f+j4eH/o+Hh/6Ph4f+j4eH/o+Hh/6Ph4f+j4eH/o+Hh/6Ph
        4f+j4eH/o+Hh/6Ph4f+j4eH/o+Hh/6Ph4f+j4eH/ouHh/6Lh4f+l4eH3sd7hksHa4BW93OEAAAAAAP/3
        /QCw4uAAtePiLafi4N2j4eH/o+Hh/6Ph4f+j4eH/o+Hh/6Ph4f+j4eH/o+Hh/6Ph4f+j4eH/o+Hh/6Ph
        4f+j4eH/o+Hh/6Ph4f+j4eH/o+Hh/6Ph4f+j4eH/o+Hh/6Lh4f6j4eH9ouHh/6Ph4f6q4OHOu93hHbrd
        4QAAAAAAs+LhALnj4wyp4eGoo+Lg/6Ph4f+j4eH/o+Hh/6Ph4f+j4eH/o+Hh/6Ph4f+j4eH/o+Hh/6Ph
        4f+j4eH/o+Hh/6Ph4f+j4eH/o+Hh/6Ph4f+j4eH/o+Hh/6Ph4f+j4eH/qeDhyLHf4Vyv4OKCsODiZ7bf
        4ivJ2uECx9viAAAAAAAAwr8AuObma6Xi4fqj4eH/o+Hh/6Ph4f+j4eH/o+Hh/6Ph4f+j4eH/o+Hh/6Ph
        4f+j4uD/o+Hh/6Ph4f+j4eH/o+Hh/6Ph4f+j4eH/o+Hh/6Ph4f+j4eH/o+Hh/6Ph4f+m4eHjtN7iNq/g
        4gDwjbIAAAAAAAAAAAAAAAAAAAAAALji4Byr4uKzo+Hh/6Ph4f+j4eH/o+Hh/6Ph4f+j4eH/o+Hh/6Ph
        4f+j4eH/o+Hh/6Pi3/6j4t/8o+Lg/aPh4f+j4eH/o+Hh/6Ph4f+j4eH/o+Hh/6Ph4f+j4eH/ouHh/6Ph
        4f+t3+GXAP//AMTV3AAAAAAAAAAAAAAAAAAAAAAAq+LfXaTi4O6j4eH+o+Hh/6Ph4f+j4eH/o+Hh/6Ph
        4f+j4eH/o+Hh/6Ph4f+j4eH/pOLgwaXl3Fym5N12o+Lg8KPh4f+j4eH/o+Hh/6Ph4f+j4eH/o+Hh/6Ph
        4f+j4eH/o+Hh/6fh4dm33eBKwNzgI8jY4ATJ198AAAAAAAAAAACy4+EerePhSKfi4LSj4eH/o+Hh/6Ph
        4f+j4eH/o+Hg/6Pi3/Wj49/8o+Hh/6Ti4N6n5dwwpeLfAKfg3g6j4eCio+Lf6aHi4f+i4eH/o+Hh/6Ph
        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
        //8B////Af///8f///8=
</value>
  </data>
</root>